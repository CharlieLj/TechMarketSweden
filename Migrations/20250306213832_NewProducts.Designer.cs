// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechMarketSweden.Data;

#nullable disable

namespace TechMarketSweden.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250306213832_NewProducts")]
    partial class NewProducts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechMarketSweden.Models.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("TechMarketSweden.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("TechMarketSweden.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("TechMarketSweden.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Stilren Apple Watch Black",
                            ImageUrl = "appleblackband.jpg",
                            Name = "Apple Watch Black",
                            Price = 9999m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Stilren Apple Watch Brown",
                            ImageUrl = "applebrownband.jpg",
                            Name = "Apple Watch Brown",
                            Price = 1999m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Stilren Apple Watch Silver",
                            ImageUrl = "applesilverband.jpg",
                            Name = "Apple Watch Silver",
                            Price = 7999m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Enkel Powerbank Black",
                            ImageUrl = "powerbankblack.jpg",
                            Name = "Powerbank Black",
                            Price = 9999m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Enkel Powerbank Silver",
                            ImageUrl = "powerbanksilver.jpg",
                            Name = "Powerbank Gray",
                            Price = 1999m
                        },
                        new
                        {
                            Id = 6,
                            Description = "Smart Multicharge Black",
                            ImageUrl = "multichargeblack.jpg",
                            Name = "Multicharge Black",
                            Price = 7999m
                        });
                });

            modelBuilder.Entity("TechMarketSweden.Models.CartItem", b =>
                {
                    b.HasOne("TechMarketSweden.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechMarketSweden.Models.OrderItem", b =>
                {
                    b.HasOne("TechMarketSweden.Models.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("TechMarketSweden.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TechMarketSweden.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
